{"version":3,"sources":["Context/authContext.js","Context/userContext.js","Components/LoginBox.js","resources/r1.jpg","Components/InventoryItem/InventoryItem.js","Containers/LoggedIn.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["authContext","React","createContext","authenticated","updateCred","authenticateUser","userContext","logout","itemTab","updateSearch","tabs","currentSearch","formSubmit","event","preventDefault","LoginBox","props","useContext","AuthContext","className","onSubmit","onChange","e","target","value","type","placeholder","onClick","href","InventoryItem","src","logo","description","id","LoggedIn","UserContext","inventory","displayed","selectedInventory","map","item","index","toString","totalInventory","itemSelector","classes","itemArea","includes","join","App","state","userCredentials","name","UserToken","userToken","url","window","location","console","log","Http","XMLHttpRequest","open","setRequestHeader","send","onreadystatechange","response","credSelector","tempUserCredentials","setState","updateSelectedTab","selectedTab","toLowerCase","split","this","Provider","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09838a10.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst authContext = React.createContext({\r\n    authenticated:false,\r\n    updateCred:() => {},\r\n    authenticateUser:() => {}\r\n});\r\n    \r\n\r\n\r\nexport default authContext;","import React from 'react';\r\n\r\nconst userContext = React.createContext({\r\n    logout:() => {},\r\n    itemTab: () => {},\r\n    updateSearch: () => {},\r\n    tabs: {},\r\n    currentSearch: [\"\"]\r\n});\r\n    \r\n\r\n\r\nexport default userContext;","import React, { useContext, } from 'react';\r\nimport AuthContext from '../Context/authContext';\r\n\r\nimport './LogInBox.css';\r\nconst formSubmit = (event) =>{\r\n  event.preventDefault();\r\n}\r\n\r\nconst LoginBox = (props) =>{\r\n    const authContext = useContext(AuthContext);\r\n\r\n    return(\r\n      <div className=\"login-box\">\r\n        <h1>Inventory</h1>\r\n\r\n        <form onSubmit={formSubmit}>\r\n            <div className=\"login-cred\">\r\n                <input  onChange={(e) =>{authContext.updateCred(e.target.value,\"username\")}} type=\"text\" placeholder=\"Username\"/>\r\n                <input  onChange={(e) =>{authContext.updateCred(e.target.value,\"password\")}} type=\"password\" placeholder=\"Password\"/>\r\n            </div>\r\n            <div>\r\n                <input onClick={authContext.authenticateUser} type=\"submit\" className=\"login-button\" value=\"LogIn\"/>\r\n            </div>\r\n        </form>\r\n\r\n    \r\n        <div className = \"sign-up\">\r\n          <p>Don't Have an account? <a href=\"../../public/index.html\">Sign Up</a></p>\r\n          <p>Forgot Password? <a href=\"../../public/index.html\">Reset Password</a></p>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginBox;","export default __webpack_public_path__ + \"static/media/r1.cf7900e0.jpg\";","import React from 'react'\r\nimport logo from '../../resources/r1.jpg';\r\nimport './InventoryItem.css';\r\n\r\n\r\nconst InventoryItem = (props) =>{\r\n\r\n    return(\r\n        <li className=\"item\">\r\n            <img className='image' src={logo}/>\r\n            <div className='itemDes'>{props.description} ID:{props.id}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default InventoryItem;","import React, {Fragment, useContext} from 'react';\r\nimport UserContext from '../Context/userContext';\r\n\r\nimport './LoggedIn.css';\r\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\r\n\r\n\r\n\r\nconst LoggedIn = (props) =>{\r\n    const userContext = useContext(UserContext);\r\n\r\n    let inventory=[\r\n        {description:\"Name of Board and Components\" , id:1 , displayed:false},\r\n        {description:\"Name of Board and Components\" , id:2, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:3, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:4, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:13, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:14, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:15, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:16, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:17, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:18, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:19, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:\"asus\" , displayed:false}\r\n    ];\r\n    \r\n    //console.log(currentSearch,currentSearch.join(' '));\r\n\r\n    let selectedInventory = inventory.map(item =>{\r\n        return userContext.currentSearch.map(\r\n            index =>{\r\n                if(index === item.id.toString() && item.displayed === false)\r\n                {\r\n                    item.displayed = true;\r\n                    return <InventoryItem description={item.description} id={item.id} key={item.id}/>;\r\n                }\r\n                else    \r\n                    return null;\r\n            }\r\n        )\r\n    });\r\n\r\n    let totalInventory = inventory.map(item =>{\r\n        return <InventoryItem description={item.description} id={item.id} key={item.id}/>\r\n    });\r\n\r\n    let itemSelector=(\r\n        <ul className='itemSelector'>\r\n        <ul onClick={() => {userContext.itemTab(0)}} className={userContext.tabs[0].classes}>All Inventory</ul>\r\n        <ul onClick={() => {userContext.itemTab(1)}} className={userContext.tabs[1].classes}>Search</ul>\r\n        <ul onClick={() => {userContext.itemTab(2)}} className={userContext.tabs[2].classes}>Item</ul>\r\n        <ul onClick={() =>{userContext.logout(true)}} className='itemTab'>Logout</ul>\r\n    </ul>\r\n    );\r\n    \r\n    let itemArea = null;\r\n    if(userContext.tabs[0].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                {totalInventory}    \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[1].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                <input onChange={userContext.updateSearch} className='searchBar' type=\"text\" value={userContext.currentSearch.join(' ')}></input>\r\n                {selectedInventory}\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[2].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}               \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <ul className=\"header\">\r\n                <li className=\"headerTitle\" >Inventory</li>\r\n                <li className=\"headerProfile\" >Profile</li>\r\n            </ul>\r\n            {itemArea}   \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;","import React, { PureComponent, Fragment } from 'react';\r\nimport AuthContext from '../Context/authContext';\r\nimport UserContext from '../Context/userContext'\r\n\r\nimport LoginBox from '../Components/LoginBox';\r\nimport LoggedIn from './LoggedIn';\r\n\r\nimport './App.css'\r\nconst debug = false;\r\n\r\nclass App extends PureComponent{\r\n  state = {\r\n    userCredentials:[\"\",\"\"],\r\n    tabs: [\r\n      {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ],\r\n    UserToken:{authenticated:false,userToken:\"\"},\r\n    currentSearch:[\"\"]\r\n  }\r\n\r\n  authenticateUser = (logout) =>{\r\n    let url = window.location.href + \"/authenticateUser\";\r\n    if(debug){\r\n      url = \"http://10.0.0.108:8080/authenticateUser\"\r\n      console.log(\"Entered authenticateUser\");\r\n    }\r\nconsole.log(url);\r\n\r\n      const Http = new XMLHttpRequest();\r\n      Http.open(\"POST\", url,false);\r\n      Http.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n\r\n      let cred = {username:this.state.userCredentials[0],password:this.state.userCredentials[1]};\r\n      Http.send();\r\n      \r\n      Http.onreadystatechange = (e) => {\r\n        console.log(Http.response);\r\n      }\r\n\r\n    \r\n/*\r\n    var xhr = new XMLHttpRequest()\r\n    let requestURL = (window.location.href +'/user?userName='+ this.state.userCredentials[0] + '&passWord=' + this.state.userCredentials[1]);\r\n\r\n    xhr.addEventListener('load', () => {\r\n        if(xhr.responseText === 'true' || logout === true || debug === true)\r\n          console.log(xhr.json());\r\n          this.setState({UserToken:xhr.json(),\r\n          userCredentials:[\"\",\"\"],\r\n          tabs: [\r\n            {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n            {name: \"Search\", classes: \"itemTab\"},\r\n            {name: \"Item\", classes: \"itemTab\"}\r\n          ],\r\n        currentSearch:[\"\"]});\r\n\r\n        if(debug)\r\n          console.log(\"Request URL: \" + requestURL + \"\\nRequest Responese: \" + xhr.responseText);\r\n    })\r\n    \r\n    xhr.open('GET', requestURL);\r\n    xhr.send()*/\r\n  }\r\n\r\n  updateCred = (value,credSelector) =>{\r\n      const index = (credSelector === \"username\") ? 0 : 1;\r\n      var tempUserCredentials = [this.state.userCredentials[0],this.state.userCredentials[1]];\r\n      tempUserCredentials[index] = value;\r\n      this.setState({userCredentials:tempUserCredentials});\r\n\r\n      if(debug)\r\n        console.log(\"CredSelector: \" + credSelector + \" Value: \" + value);   \r\n  \r\n\r\n    \r\n  }\r\n\r\n  updateSelectedTab = (index) =>{\r\n    let tabs = [\r\n      {name: \"All Inventory\", classes: \"itemTab\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ];\r\n    let selectedTab = {...tabs[index]};\r\n    selectedTab.classes += (\" selectedItem\");\r\n    \r\n    tabs[index] = selectedTab;\r\n\r\n    this.setState({tabs:tabs});\r\n  }\r\n\r\n  updateSearch = (event) =>{\r\n    this.setState({currentSearch:event.target.value.toLowerCase().split(\" \")});\r\n    if(debug)\r\n      console.log(\"Current Search: \" + this.state.currentSearch);\r\n  }\r\n\r\n  render(){\r\n    let item = null\r\n    if(this.state.UserToken.authenticated)\r\n      item = (\r\n        <UserContext.Provider value = {\r\n          {logout : this.authenticateUser,\r\n          itemTab : this.updateSelectedTab,\r\n          updateSearch : this.updateSearch,\r\n          tabs : this.state.tabs,\r\n          currentSearch : this.state.currentSearch}}>\r\n              \r\n            <LoggedIn/>\r\n\r\n        </UserContext.Provider>);\r\n    \r\n    else     \r\n      item = (\r\n        <AuthContext.Provider value = {\r\n          {authenticated : this.state.UserToken.authenticated,\r\n          updateCred : this.updateCred,\r\n          authenticateUser : this.authenticateUser}}>\r\n            \r\n            <LoginBox/> \r\n\r\n        </AuthContext.Provider>);\r\n\r\n    return(\r\n      <Fragment>\r\n        {item}\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './Containers/App';\r\n\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}