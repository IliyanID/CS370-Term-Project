{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Documents\\\\GitHub\\\\CS370-Term-Project\\\\Front-End\\\\src\\\\Containers\\\\LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect, useState } from 'react';\nimport UserContext from '../Context/userContext';\nimport './LoggedIn.css';\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\n\nconst LoggedIn = props => {\n  _s();\n\n  const [count, setCount] = useState([{\n    inventory: {\n      description: \"\",\n      id: \"\",\n      displayed: false,\n      url: \"\",\n      username: \"\"\n    }\n  }]);\n  useEffect(() => {\n    getInventory();\n  });\n\n  const getInventory = () => {\n    const Http = new XMLHttpRequest();\n    let url = \"http://10.0.0.108:80/inventory\";\n    Http.open(\"GET\", url);\n    Http.send();\n\n    Http.onreadystatechange = e => {\n      //console.log(JSON.parse(Http.response));\n      setCount({\n        inventory: JSON.parse(Http.response)\n      });\n    };\n  };\n\n  const userContext = count.inventory;\n  let inventory = useContext.inventory;\n  console.log(inventory); //console.log(currentSearch,currentSearch.join(' '));\n\n  let selectedInventory = inventory.map(item => {\n    return userContext.currentSearch.map(index => {\n      if (index === item.id.toString() && item.displayed === false) {\n        item.displayed = true;\n        return /*#__PURE__*/_jsxDEV(InventoryItem, {\n          description: item.description,\n          id: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this);\n      } else return null;\n    });\n  });\n  let totalInventory = inventory.map(item => {\n    return /*#__PURE__*/_jsxDEV(InventoryItem, {\n      description: item.description,\n      id: item.id\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  });\n\n  let itemSelector = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"itemSelector\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(0);\n      },\n      className: userContext.tabs[0].classes,\n      children: \"All Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(1);\n      },\n      className: userContext.tabs[1].classes,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(2);\n      },\n      className: userContext.tabs[2].classes,\n      children: \"Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.logout(true);\n      },\n      className: \"itemTab\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n\n  let itemArea = null;\n\n  if (userContext.tabs[0].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, totalInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  } else if (userContext.tabs[1].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: userContext.updateSearch,\n        className: \"searchBar\",\n        type: \"text\",\n        value: userContext.currentSearch.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), selectedInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  } else if (userContext.tabs[2].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: itemSelector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerTitle\",\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerProfile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), itemArea]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggedIn, \"wFdnsErFOuBuAnBPD9/PARDac0E=\");\n\n_c = LoggedIn;\nexport default LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["C:/Users/Iliyan/Documents/GitHub/CS370-Term-Project/Front-End/src/Containers/LoggedIn.js"],"names":["React","Fragment","useContext","useEffect","useState","UserContext","InventoryItem","LoggedIn","props","count","setCount","inventory","description","id","displayed","url","username","getInventory","Http","XMLHttpRequest","open","send","onreadystatechange","e","JSON","parse","response","userContext","console","log","selectedInventory","map","item","currentSearch","index","toString","totalInventory","itemSelector","itemTab","tabs","classes","logout","itemArea","includes","updateSearch","join"],"mappings":"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","sourcesContent":["import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport UserContext from '../Context/userContext';\r\n\r\nimport './LoggedIn.css';\r\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\r\n\r\n\r\n\r\n\r\nconst LoggedIn = (props) =>{\r\n    const [count, setCount] = useState([{inventory:{description:\"\",id:\"\",displayed:false,url:\"\",username:\"\"}}]);\r\n\r\n    useEffect(() => {\r\n        getInventory();\r\n      });\r\n\r\n\r\n      const getInventory = () =>{\r\n    \r\n\r\n        const Http = new XMLHttpRequest();\r\n        let url = \"http://10.0.0.108:80/inventory\";\r\n        Http.open(\"GET\",url);\r\n        Http.send();\r\n        Http.onreadystatechange = (e) => {\r\n          //console.log(JSON.parse(Http.response));\r\n         setCount({inventory:JSON.parse(Http.response)})\r\n        }\r\n    }\r\n\r\n    const userContext = count.inventory\r\n\r\n    let inventory=useContext.inventory;\r\n    console.log(inventory);\r\n    //console.log(currentSearch,currentSearch.join(' '));\r\n\r\n    let selectedInventory = inventory.map(item =>{\r\n        return userContext.currentSearch.map(\r\n            index =>{\r\n                if(index === item.id.toString() && item.displayed === false)\r\n                {\r\n                    item.displayed = true;\r\n                    return <InventoryItem description={item.description} id={item.id} key={item.id}/>;\r\n                }\r\n                else    \r\n                    return null;\r\n            }\r\n        )\r\n    });\r\n\r\n    let totalInventory = inventory.map(item =>{\r\n        return <InventoryItem description={item.description} id={item.id} key={item.id}/>\r\n    });\r\n\r\n    let itemSelector=(\r\n        <ul className='itemSelector'>\r\n        <ul onClick={() => {userContext.itemTab(0)}} className={userContext.tabs[0].classes}>All Inventory</ul>\r\n        <ul onClick={() => {userContext.itemTab(1)}} className={userContext.tabs[1].classes}>Search</ul>\r\n        <ul onClick={() => {userContext.itemTab(2)}} className={userContext.tabs[2].classes}>Item</ul>\r\n        <ul onClick={() =>{userContext.logout(true)}} className='itemTab'>Logout</ul>\r\n    </ul>\r\n    );\r\n    \r\n    let itemArea = null;\r\n    if(userContext.tabs[0].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                {totalInventory}    \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[1].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                <input onChange={userContext.updateSearch} className='searchBar' type=\"text\" value={userContext.currentSearch.join(' ')}></input>\r\n                {selectedInventory}\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[2].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}               \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <ul className=\"header\">\r\n                <li className=\"headerTitle\" >Inventory</li>\r\n                <li className=\"headerProfile\" >Profile</li>\r\n            </ul>\r\n            {itemArea}   \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}