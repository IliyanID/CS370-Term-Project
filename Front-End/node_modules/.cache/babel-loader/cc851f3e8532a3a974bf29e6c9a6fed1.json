{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      verified: false,\n      tabs: [{\n        name: \"All Inventory\",\n        classes: \"itemTab selectedItem\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }],\n      currentSearch: ''\n    };\n\n    this.updateUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.updatePass = event => {\n      this.setState({\n        passWord: event.target.value\n      });\n    };\n\n    this.updateSelected = index => {\n      let tabs = [{\n        name: \"All Inventory\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }];\n      let selectedTab = { ...tabs[index]\n      };\n      selectedTab.classes += \" selectedItem\";\n      tabs[index] = selectedTab;\n      this.setState({\n        tabs: tabs\n      });\n    };\n\n    this.updateSearch = event => {\n      this.setState({\n        currentSearch: event.target.value\n      });\n    };\n\n    this.checkCred = logout => {\n      var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n      xhr.addEventListener('load', () => {\n        // update the state of the component with the result here\n        //console.log(xhr.responseText)\n        if (xhr.responseText === 'true' || logout === true) {\n          console.log(\"entered\");\n          const temp = this.state.verified;\n          this.setState({\n            verified: !temp\n          });\n          this.setState({\n            passWord: \"\",\n            userName: \"\",\n            currentSearch: ''\n          });\n          this.updateSelected(0);\n        }\n      }); // open the request with the verb and the url\n\n      let user = this.state.userName;\n      let pass = this.state.passWord;\n      let url = window.location.href;\n      xhr.open('GET', url + '/user?userName=' + user + '&passWord=' + pass); // send the request\n\n      xhr.send(); //console.log(url+'/user?userName='+user + '&passWord=' + pass);\n    };\n  }\n\n  render() {\n    let item = null;\n    if (this.state.verified) item = /*#__PURE__*/_jsxDEV(LoggedIn, {\n      logOut: this.checkCred,\n      itemTab: this.updateSelected,\n      tabs: this.state.tabs,\n      updateSearch: this.updateSearch,\n      searchBar: this.state.currentSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }, this);else item = /*#__PURE__*/_jsxDEV(LoginBox, {\n      changeU: this.updateUser,\n      changeP: this.updatePass,\n      click: this.checkCred,\n      verified: this.state.verified\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/App.js"],"names":["React","Component","LoginBox","LoggedIn","App","state","userName","passWord","verified","tabs","name","classes","currentSearch","updateUser","event","setState","target","value","updatePass","updateSelected","index","selectedTab","updateSearch","checkCred","logout","xhr","XMLHttpRequest","addEventListener","responseText","console","log","temp","user","pass","url","window","location","href","open","send","render","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\n\nimport './App.css'\n\nclass App extends Component {\n  state = {\n      userName: \"\",\n      passWord: \"\",\n      verified: false,\n      tabs: [\n        {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\n        {name: \"Search\", classes: \"itemTab\"},\n        {name: \"Item\", classes: \"itemTab\"}\n      ],\n      currentSearch:''\n  }\n\n  updateUser = (event) => {\n    this.setState({userName: event.target.value})\n\n  }\n  updatePass = (event) => {\n    this.setState({passWord: event.target.value});\n\n  }\n\n  updateSelected = (index) =>{\n    let tabs = [\n      {name: \"All Inventory\", classes: \"itemTab\"},\n      {name: \"Search\", classes: \"itemTab\"},\n      {name: \"Item\", classes: \"itemTab\"}\n    ];\n\n    let selectedTab = {...tabs[index]};\n    selectedTab.classes += (\" selectedItem\");\n\n    \n    tabs[index] = selectedTab;\n\n    this.setState(\n      {tabs:tabs}\n    );\n\n  }\n\n  updateSearch = (event) =>{\n    this.setState(\n      {currentSearch: event.target.value}\n    );\n  }\n\n  checkCred = (logout) =>{\n    var xhr = new XMLHttpRequest()\n\n    // get a callback when the server responds\n    xhr.addEventListener('load', () => {\n      // update the state of the component with the result here\n      //console.log(xhr.responseText)\n      if(xhr.responseText === 'true' || logout === true)\n      {\n        console.log(\"entered\")\n        const temp = this.state.verified;\n        this.setState({verified:!temp})\n        this.setState({passWord: \"\", userName: \"\",currentSearch:''});\n\n        this.updateSelected(0);\n      }\n    })\n    // open the request with the verb and the url\n    let user = this.state.userName;\n    let pass = this.state.passWord;\n    let url = window.location.href;\n    xhr.open('GET', url+'/user?userName='+user + '&passWord=' + pass);\n    // send the request\n    xhr.send()\n    //console.log(url+'/user?userName='+user + '&passWord=' + pass);\n    \n\n  }\n\n  render(){\n\n    let item = null\n    if(this.state.verified)\n      item = (<LoggedIn\n      logOut = {this.checkCred}\n      itemTab = {this.updateSelected}\n      tabs = {this.state.tabs}\n      updateSearch = {this.updateSearch}\n      searchBar = {this.state.currentSearch}\n      />);\n    else\n      item = (<LoginBox\n      changeU = {this.updateUser}\n      changeP = {this.updatePass}\n      click = {this.checkCred}\n      verified = {this.state.verified}\n      /> );\n\n    return(\n      <div>\n        {item}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}