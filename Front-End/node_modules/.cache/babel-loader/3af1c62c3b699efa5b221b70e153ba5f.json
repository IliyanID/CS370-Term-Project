{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport authContext from '../Context/authContext';\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\nimport './App.css';\nconst debug = true;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"\",\n      passWord: \"\",\n      authenticated: false,\n      tabs: [{\n        name: \"All Inventory\",\n        classes: \"itemTab selectedItem\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }],\n      currentSearch: ''\n    };\n\n    this.updateUser = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.updatePass = event => {\n      this.setState({\n        passWord: event.target.value\n      });\n    };\n\n    this.updateSelected = index => {\n      let tabs = [{\n        name: \"All Inventory\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }];\n      let selectedTab = { ...tabs[index]\n      };\n      selectedTab.classes += \" selectedItem\";\n      tabs[index] = selectedTab;\n      this.setState({\n        tabs: tabs\n      });\n    };\n\n    this.updateSearch = event => {\n      this.setState({\n        currentSearch: event.target.value\n      });\n    };\n\n    this.checkCred = logout => {\n      if (debug === false) {\n        var xhr = new XMLHttpRequest(); // get a callback when the server responds\n\n        xhr.addEventListener('load', () => {\n          // update the state of the component with the result here\n          console.log(xhr.responseText);\n\n          if (xhr.responseText === 'true' || logout === true) {\n            console.log(\"entered\");\n            const temp = this.state.authenticated;\n            this.setState({\n              authenticated: !temp\n            });\n            this.setState({\n              passWord: \"\",\n              userName: \"\",\n              currentSearch: ''\n            });\n            this.updateSelected(0);\n          }\n        }); // open the request with the verb and the url\n\n        let user = this.state.userName;\n        let pass = this.state.passWord;\n        let url = window.location.href;\n        xhr.open('GET', url + '/user?userName=' + user + '&passWord=' + pass); // send the request\n\n        xhr.send();\n        console.log(url + '/user?userName=' + user + '&passWord=' + pass);\n      } else {\n        const temp = this.state.authenticated;\n        this.setState({\n          authenticated: !temp\n        });\n        this.setState({\n          passWord: \"\",\n          userName: \"\",\n          currentSearch: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    let item = null;\n    if (this.state.authenticated) item = /*#__PURE__*/_jsxDEV(LoggedIn, {\n      logOut: this.checkCred,\n      itemTab: this.updateSelected,\n      tabs: this.state.tabs,\n      updateSearch: this.updateSearch,\n      searchBar: this.state.currentSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this);else item = /*#__PURE__*/_jsxDEV(\"authContext\", {\n      value: {\n        authenticated: this.state.authenticated,\n        updateCred: this.updateCred,\n        submit: this.submit\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/App.js"],"names":["React","Component","authContext","LoginBox","LoggedIn","debug","App","state","userName","passWord","authenticated","tabs","name","classes","currentSearch","updateUser","event","setState","target","value","updatePass","updateSelected","index","selectedTab","updateSearch","checkCred","logout","xhr","XMLHttpRequest","addEventListener","console","log","responseText","temp","user","pass","url","window","location","href","open","send","render","item","updateCred","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport authContext from '../Context/authContext';\n\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\n\nimport './App.css'\nconst debug = true;\n\nclass App extends Component {\n  state = {\n      userName: \"\",\n      passWord: \"\",\n      authenticated: false,\n      tabs: [\n        {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\n        {name: \"Search\", classes: \"itemTab\"},\n        {name: \"Item\", classes: \"itemTab\"}\n      ],\n      currentSearch:''\n  }\n\n  updateUser = (event) => {\n    this.setState({userName: event.target.value})\n  }\n  updatePass = (event) => {\n    this.setState({passWord: event.target.value});\n  }\n\n  updateSelected = (index) =>{\n    let tabs = [\n      {name: \"All Inventory\", classes: \"itemTab\"},\n      {name: \"Search\", classes: \"itemTab\"},\n      {name: \"Item\", classes: \"itemTab\"}\n    ];\n\n    let selectedTab = {...tabs[index]};\n    selectedTab.classes += (\" selectedItem\");\n\n    \n    tabs[index] = selectedTab;\n\n    this.setState(\n      {tabs:tabs}\n    );\n\n  }\n\n  updateSearch = (event) =>{\n    this.setState(\n      {currentSearch: event.target.value}\n    );\n  }\n\n  checkCred = (logout) =>{\n\n    if(debug === false){\n      var xhr = new XMLHttpRequest()\n      // get a callback when the server responds\n      xhr.addEventListener('load', () => {\n        // update the state of the component with the result here\n        console.log(xhr.responseText)\n        if(xhr.responseText === 'true' || logout === true)\n        {\n          console.log(\"entered\")\n          const temp = this.state.authenticated;\n          this.setState({authenticated:!temp})\n          this.setState({passWord: \"\", userName: \"\",currentSearch:''});\n\n          this.updateSelected(0);\n        }\n      })\n      // open the request with the verb and the url\n      let user = this.state.userName;\n      let pass = this.state.passWord;\n      let url = window.location.href;\n      xhr.open('GET', url+'/user?userName='+user + '&passWord=' + pass);\n      // send the request\n      xhr.send()\n      console.log(url+'/user?userName='+user + '&passWord=' + pass);\n    }\n    else{\n      const temp = this.state.authenticated;\n      this.setState({authenticated:!temp})\n      this.setState({passWord: \"\", userName: \"\",currentSearch:''});\n    }\n\n  }\n\n  render(){\n\n    let item = null\n    if(this.state.authenticated)\n      item = (<LoggedIn\n      logOut = {this.checkCred}\n      itemTab = {this.updateSelected}\n      tabs = {this.state.tabs}\n      updateSearch = {this.updateSearch}\n      searchBar = {this.state.currentSearch}\n      />);\n    else\n      \n      item = (\n        <authContext \n        value={\n          {authenticated:this.state.authenticated,\n          updateCred:this.updateCred,\n          submit:this.submit\n        }}>\n          <LoginBox/> \n        </authContext>);\n\n    return(\n      <div>\n        {item}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}