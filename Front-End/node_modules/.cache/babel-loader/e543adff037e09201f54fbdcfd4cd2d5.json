{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Documents\\\\GitHub\\\\CS370-Term-Project\\\\Front-End\\\\src\\\\Containers\\\\App.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport AuthContext from '../Context/authContext';\nimport UserContext from '../Context/userContext';\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\nimport './App.css';\nconst debug = true;\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userCredentials: [\"\", \"\"],\n      tabs: [{\n        name: \"All Inventory\",\n        classes: \"itemTab selectedItem\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }],\n      UserToken: {\n        authenticated: false,\n        userToken: \"\"\n      },\n      currentSearch: [\"\"],\n      inventory: [{}]\n    };\n\n    this.authenticateUser = logout => {\n      let url = document.URL + \"/authenticateUser\";\n\n      if (debug) {\n        url = \"http://10.0.0.108:80/user\";\n        console.log(\"Entered authenticateUser\");\n      }\n\n      console.log(url);\n      const Http = new XMLHttpRequest();\n      Http.open(\"POST\", url); //Http.setRequestHeader(\"Content-Type\", \"application/json\");\n      //console.log(Http.request)\n\n      let cred = {\n        username: this.state.userCredentials[0],\n        password: this.state.userCredentials[1]\n      };\n\n      Http.onreadystatechange = e => {\n        let result = Http.response;\n        if (result.authenticated === 'true' || logout === true || debug === true) this.setState({\n          UserToken: JSON.parse(Http.response),\n          userCredentials: [\"\", \"\"],\n          tabs: [{\n            name: \"All Inventory\",\n            classes: \"itemTab selectedItem\"\n          }, {\n            name: \"Search\",\n            classes: \"itemTab\"\n          }, {\n            name: \"Item\",\n            classes: \"itemTab\"\n          }],\n          currentSearch: [\"\"]\n        });\n        console.log(JSON.parse(Http.response));\n      };\n\n      Http.send(JSON.stringify(cred));\n    };\n\n    this.getInventory = () => {\n      this.getInventory();\n      const Http = new XMLHttpRequest();\n      let url = \"http://10.0.0.108:80/inventory\";\n      Http.open(\"GET\", url);\n      Http.send();\n\n      Http.onreadystatechange = e => {\n        //console.log(JSON.parse(Http.response));\n        this.setState({\n          inventory: JSON.parse(Http.response)\n        });\n      };\n    };\n\n    this.updateCred = (value, credSelector) => {\n      const index = credSelector === \"username\" ? 0 : 1;\n      var tempUserCredentials = [this.state.userCredentials[0], this.state.userCredentials[1]];\n      tempUserCredentials[index] = value;\n      this.setState({\n        userCredentials: tempUserCredentials\n      });\n      if (debug) console.log(\"CredSelector: \" + credSelector + \" Value: \" + value);\n    };\n\n    this.updateSelectedTab = index => {\n      let tabs = [{\n        name: \"All Inventory\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }];\n      let selectedTab = { ...tabs[index]\n      };\n      selectedTab.classes += \" selectedItem\";\n      tabs[index] = selectedTab;\n      this.setState({\n        tabs: tabs\n      });\n    };\n\n    this.updateSearch = event => {\n      this.setState({\n        currentSearch: event.target.value.toLowerCase().split(\" \")\n      });\n      if (debug) console.log(\"Current Search: \" + this.state.currentSearch);\n    };\n  }\n\n  render() {\n    let item = null;\n    if (this.state.UserToken.authenticated) item = /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n      value: {\n        logout: this.authenticateUser,\n        itemTab: this.updateSelectedTab,\n        updateSearch: this.updateSearch,\n        tabs: this.state.tabs,\n        currentSearch: this.state.currentSearch,\n        UserToken: this.state.UserToken,\n        inventory: this.state.inventory\n      },\n      children: /*#__PURE__*/_jsxDEV(LoggedIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this);else item = /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        authenticated: this.state.UserToken.authenticated,\n        updateCred: this.updateCred,\n        authenticateUser: this.authenticateUser\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Iliyan/Documents/GitHub/CS370-Term-Project/Front-End/src/Containers/App.js"],"names":["React","PureComponent","Fragment","AuthContext","UserContext","LoginBox","LoggedIn","debug","App","constructor","props","state","userCredentials","tabs","name","classes","UserToken","authenticated","userToken","currentSearch","inventory","authenticateUser","logout","url","document","URL","console","log","Http","XMLHttpRequest","open","cred","username","password","onreadystatechange","e","result","response","setState","JSON","parse","send","stringify","getInventory","updateCred","value","credSelector","index","tempUserCredentials","updateSelectedTab","selectedTab","updateSearch","event","target","toLowerCase","split","render","item","itemTab"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport AuthContext from '../Context/authContext';\r\nimport UserContext from '../Context/userContext'\r\n\r\nimport LoginBox from '../Components/LoginBox';\r\nimport LoggedIn from './LoggedIn';\r\n\r\nimport './App.css'\r\nconst debug = true;\r\n\r\nclass App extends PureComponent{\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n  state = {\r\n    userCredentials:[\"\",\"\"],\r\n    tabs: [\r\n      {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ],\r\n    UserToken:{authenticated:false,userToken:\"\"},\r\n    currentSearch:[\"\"],\r\n    inventory:[{}]\r\n  }\r\n\r\n  authenticateUser = (logout) =>{\r\n    let url = document.URL + \"/authenticateUser\";\r\n    if(debug){\r\n      url = \"http://10.0.0.108:80/user\"\r\n      console.log(\"Entered authenticateUser\");\r\n    }\r\n    console.log(url);\r\n\r\n      const Http = new XMLHttpRequest();\r\n      Http.open(\"POST\", url);\r\n      //Http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n      //console.log(Http.request)\r\n      let cred = {username:this.state.userCredentials[0],password:this.state.userCredentials[1]};\r\n      \r\n      \r\n      Http.onreadystatechange = (e) => {\r\n        let result = Http.response;\r\n        if(result.authenticated === 'true' || logout === true || debug === true)\r\n          this.setState({UserToken:JSON.parse(Http.response),\r\n          userCredentials:[\"\",\"\"],\r\n          tabs: [\r\n            {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n            {name: \"Search\", classes: \"itemTab\"},\r\n            {name: \"Item\", classes: \"itemTab\"}\r\n          ],\r\n        currentSearch:[\"\"]});\r\n        console.log(JSON.parse(Http.response));\r\n       \r\n\r\n\r\n      \r\n    }\r\n    Http.send(JSON.stringify(cred));\r\n  }\r\n\r\n  getInventory = () =>{\r\n    this.getInventory();\r\n\r\n    const Http = new XMLHttpRequest();\r\n    let url = \"http://10.0.0.108:80/inventory\";\r\n    Http.open(\"GET\",url);\r\n    Http.send();\r\n    Http.onreadystatechange = (e) => {\r\n      //console.log(JSON.parse(Http.response));\r\n      this.setState({inventory:JSON.parse(Http.response)})\r\n    }\r\n\r\n    \r\n\r\n\r\n  }\r\n  \r\n\r\n\r\n  updateCred = (value,credSelector) =>{\r\n      const index = (credSelector === \"username\") ? 0 : 1;\r\n      var tempUserCredentials = [this.state.userCredentials[0],this.state.userCredentials[1]];\r\n      tempUserCredentials[index] = value;\r\n      this.setState({userCredentials:tempUserCredentials});\r\n\r\n      if(debug)\r\n        console.log(\"CredSelector: \" + credSelector + \" Value: \" + value);   \r\n  \r\n\r\n    \r\n  }\r\n\r\n  updateSelectedTab = (index) =>{\r\n    let tabs = [\r\n      {name: \"All Inventory\", classes: \"itemTab\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ];\r\n    let selectedTab = {...tabs[index]};\r\n    selectedTab.classes += (\" selectedItem\");\r\n    \r\n    tabs[index] = selectedTab;\r\n\r\n    this.setState({tabs:tabs});\r\n  }\r\n\r\n  updateSearch = (event) =>{\r\n    this.setState({currentSearch:event.target.value.toLowerCase().split(\" \")});\r\n    if(debug)\r\n      console.log(\"Current Search: \" + this.state.currentSearch);\r\n  }\r\n\r\n  render(){\r\n  \r\n    let item = null\r\n    if(this.state.UserToken.authenticated)\r\n      item = (\r\n        <UserContext.Provider value = {\r\n          {logout : this.authenticateUser,\r\n          itemTab : this.updateSelectedTab,\r\n          updateSearch : this.updateSearch,\r\n          tabs : this.state.tabs,\r\n          currentSearch : this.state.currentSearch,\r\n          UserToken: this.state.UserToken,\r\n          inventory:this.state.inventory}}>\r\n              \r\n            <LoggedIn/>\r\n\r\n        </UserContext.Provider>);\r\n    \r\n    else     \r\n      item = (\r\n        <AuthContext.Provider value = {\r\n          {authenticated : this.state.UserToken.authenticated,\r\n          updateCred : this.updateCred,\r\n          authenticateUser : this.authenticateUser}}>\r\n            \r\n            <LoginBox/> \r\n\r\n        </AuthContext.Provider>);\r\n\r\n    return(\r\n      <Fragment>\r\n        {item}\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}