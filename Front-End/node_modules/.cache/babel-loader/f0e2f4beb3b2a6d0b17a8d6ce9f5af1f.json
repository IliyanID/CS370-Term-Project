{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment, useContext } from 'react';\nimport UserContext from '../Context/userContext';\nimport './LoggedIn.css';\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\n\nconst LoggedIn = props => {\n  _s();\n\n  const [currentSearch, setSearch] = useState([\"\"]);\n  const userContext = useContext(UserContext);\n  let inventory = [{\n    description: \"Name of Board and Components\",\n    id: 1,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 2,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 3,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 4,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 13,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 14,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 15,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 16,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 17,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 18,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: 19,\n    displayed: false\n  }, {\n    description: \"Name of Board and Components\",\n    id: \"asus\",\n    displayed: false\n  }];\n\n  const updateSearch = event => {\n    setSearch(event.target.value.toLowerCase().split(\" \"));\n  }; //console.log(currentSearch,currentSearch.join(' '));\n\n\n  let selectedInventory = inventory.map(item => {\n    return currentSearch.map(index => {\n      if (index === item.id.toString() && item.displayed === false) {\n        item.displayed = true;\n        return /*#__PURE__*/_jsxDEV(InventoryItem, {\n          description: item.description,\n          id: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 28\n        }, this);\n      } else return null;\n    });\n  });\n  let totalInventory = inventory.map(item => {\n    return /*#__PURE__*/_jsxDEV(InventoryItem, {\n      description: item.description,\n      id: item.id\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  });\n\n  let itemSelector = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"itemSelector\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(0);\n      },\n      className: userContext.tabs[0].classes,\n      children: \"All Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(1);\n      },\n      className: userContext.tabs[1].classes,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.itemTab(2);\n      },\n      className: userContext.tabs[2].classes,\n      children: \"Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        userContext.logout(true);\n      },\n      className: \"itemTab\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n\n  let itemArea = null;\n\n  if (userContext.tabs[0].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, totalInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  } else if (userContext.tabs[1].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateSearch,\n        className: \"searchBar\",\n        type: \"text\",\n        value: currentSearch.join(' ')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), selectedInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  } else if (userContext.tabs[2].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: itemSelector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerTitle\",\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerProfile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), itemArea]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggedIn, \"dQUhIXfWfxzX+q9bvxt2rudiT3Q=\");\n\n_c = LoggedIn;\nexport default LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/LoggedIn.js"],"names":["React","useState","Fragment","useContext","UserContext","InventoryItem","LoggedIn","props","currentSearch","setSearch","userContext","inventory","description","id","displayed","updateSearch","event","target","value","toLowerCase","split","selectedInventory","map","item","index","toString","totalInventory","itemSelector","itemTab","tabs","classes","logout","itemArea","includes","join"],"mappings":"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","sourcesContent":["import React, {useState, Fragment, useContext} from 'react';\r\nimport UserContext from '../Context/userContext';\r\n\r\nimport './LoggedIn.css';\r\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\r\n\r\n\r\n\r\nconst LoggedIn = (props) =>{\r\n    const [currentSearch, setSearch] = useState([\"\"]);\r\n    const userContext = useContext(UserContext);\r\n\r\n    let inventory=[\r\n        {description:\"Name of Board and Components\" , id:1 , displayed:false},\r\n        {description:\"Name of Board and Components\" , id:2, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:3, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:4, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:13, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:14, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:15, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:16, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:17, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:18, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:19, displayed:false},\r\n        {description:\"Name of Board and Components\" , id:\"asus\" , displayed:false}\r\n    ];\r\n    \r\n    const updateSearch = (event) =>{\r\n        setSearch(event.target.value.toLowerCase().split(\" \"));   \r\n    } \r\n    \r\n    //console.log(currentSearch,currentSearch.join(' '));\r\n\r\n    let selectedInventory = inventory.map(item =>{\r\n        return currentSearch.map(\r\n            index =>{\r\n                if(index === item.id.toString() && item.displayed === false)\r\n                {\r\n                    item.displayed = true;\r\n                    return <InventoryItem description={item.description} id={item.id} key={item.id}/>;\r\n                }\r\n                else    \r\n                    return null;\r\n            }\r\n        )\r\n    });\r\n\r\n    let totalInventory = inventory.map(item =>{\r\n        return <InventoryItem description={item.description} id={item.id} key={item.id}/>\r\n    });\r\n\r\n    let itemSelector=(\r\n        <ul className='itemSelector'>\r\n        <ul onClick={() => {userContext.itemTab(0)}} className={userContext.tabs[0].classes}>All Inventory</ul>\r\n        <ul onClick={() => {userContext.itemTab(1)}} className={userContext.tabs[1].classes}>Search</ul>\r\n        <ul onClick={() => {userContext.itemTab(2)}} className={userContext.tabs[2].classes}>Item</ul>\r\n        <ul onClick={() =>{userContext.logout(true)}} className='itemTab'>Logout</ul>\r\n    </ul>\r\n    );\r\n    \r\n    let itemArea = null;\r\n    if(userContext.tabs[0].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                {totalInventory}    \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[1].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                <input onChange={updateSearch} className='searchBar' type=\"text\" value={currentSearch.join(' ')}></input>\r\n                {selectedInventory}\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[2].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}               \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <ul className=\"header\">\r\n                <li className=\"headerTitle\" >Inventory</li>\r\n                <li className=\"headerProfile\" >Profile</li>\r\n            </ul>\r\n            {itemArea}   \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}