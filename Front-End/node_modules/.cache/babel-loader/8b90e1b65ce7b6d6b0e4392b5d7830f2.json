{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\App.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport AuthContext from '../Context/authContext';\nimport UserContext from '../Context/userContext';\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\nimport './App.css';\nconst debug = true;\n\nclass App extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userCredentials: [username = \"\", password = \"\"],\n      tabs: [{\n        name: \"All Inventory\",\n        classes: \"itemTab selectedItem\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }],\n      authenticated: false,\n      currentSearch: ''\n    };\n\n    this.updateCred = (event, credSelector) => {\n      const index = credSelector === \"username\" ? 0 : 1;\n      this.setState(userCredentials[index] = event.target.value);\n      if (debug) console.log(\"CredSelector: \" + credSelector + \" Value: \" + event.target.value);\n    };\n\n    this.updateSelectedTab = index => {\n      let tabs = [{\n        name: \"All Inventory\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }];\n      let selectedTab = { ...tabs[index]\n      };\n      selectedTab.classes += \" selectedItem\";\n      tabs[index] = selectedTab;\n      this.setState({\n        tabs: tabs\n      });\n    };\n\n    this.updateSearch = event => {\n      this.setState({\n        currentSearch: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let item = null;\n    if (this.state.authenticated) item = /*#__PURE__*/_jsxDEV(UserContext, {\n      value: {\n        logOut: this.CheckCred,\n        itemTab: this.updateSelectedTab,\n        updateSearch: this.updateSearch,\n        tabs: this.state.tabs,\n        searchBar: this.state.currentSearch\n      },\n      children: /*#__PURE__*/_jsxDEV(LoggedIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);else item = /*#__PURE__*/_jsxDEV(AuthContext, {\n      value: {\n        authenticated: this.state.authenticated,\n        updateCred: this.updateCred,\n        submit: this.submit\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/App.js"],"names":["React","PureComponent","Fragment","AuthContext","UserContext","LoginBox","LoggedIn","debug","App","state","userCredentials","username","password","tabs","name","classes","authenticated","currentSearch","updateCred","event","credSelector","index","setState","target","value","console","log","updateSelectedTab","selectedTab","updateSearch","render","item","logOut","CheckCred","itemTab","searchBar","submit"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport AuthContext from '../Context/authContext';\nimport UserContext from '../Context/userContext'\n\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\n\nimport './App.css'\nconst debug = true;\n\nclass App extends PureComponent{\n  state = {\n    userCredentials:[username = \"\", password = \"\"],\n      tabs: [\n        {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\n        {name: \"Search\", classes: \"itemTab\"},\n        {name: \"Item\", classes: \"itemTab\"}\n      ],\n      authenticated: false,\n      currentSearch:''\n  }\n\n  updateCred = (event,credSelector) =>{\n    const index = (credSelector === \"username\") ? 0 : 1;\n    this.setState(userCredentials[index] = event.target.value);\n\n    if(debug)\n      console.log(\"CredSelector: \" + credSelector + \" Value: \" + event.target.value);\n  }\n\n  updateSelectedTab = (index) =>{\n    let tabs = [\n      {name: \"All Inventory\", classes: \"itemTab\"},\n      {name: \"Search\", classes: \"itemTab\"},\n      {name: \"Item\", classes: \"itemTab\"}\n    ];\n    let selectedTab = {...tabs[index]};\n    selectedTab.classes += (\" selectedItem\");\n    \n    tabs[index] = selectedTab;\n\n    this.setState({tabs:tabs});\n  }\n\n  updateSearch = (event) =>{\n    this.setState(\n      {currentSearch: event.target.value}\n    );\n  }\n\n  render(){\n    let item = null\n    if(this.state.authenticated)\n      item = (\n        <UserContext value = {\n          {logOut : this.CheckCred,\n          itemTab : this.updateSelectedTab,\n          updateSearch : this.updateSearch,\n          tabs : this.state.tabs,\n          searchBar : this.state.currentSearch}}>\n              \n            <LoggedIn/>\n\n        </UserContext>);\n    \n    else     \n      item = (\n        <AuthContext value = {\n          {authenticated : this.state.authenticated,\n          updateCred : this.updateCred,\n          submit : this.submit}}>\n            \n            <LoginBox/> \n\n        </AuthContext>);\n\n    return(\n      <Fragment>\n        {item}\n      </Fragment>\n    );\n\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}