{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './LoggedIn.css';\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\n\nconst LoggedIn = props => {\n  _s();\n\n  const [currentSearch, setSearch] = useState(\"\");\n  let inventory = [{\n    description: \"Name of Board and Components\",\n    id: 1\n  }, {\n    description: \"Name of Board and Components\",\n    id: 2\n  }, {\n    description: \"Name of Board and Components\",\n    id: 3\n  }, {\n    description: \"Name of Board and Components\",\n    id: 4\n  }, {\n    description: \"Name of Board and Components\",\n    id: 13\n  }, {\n    description: \"Name of Board and Components\",\n    id: 14\n  }, {\n    description: \"Name of Board and Components\",\n    id: 15\n  }, {\n    description: \"Name of Board and Components\",\n    id: 16\n  }, {\n    description: \"Name of Board and Components\",\n    id: 17\n  }, {\n    description: \"Name of Board and Components\",\n    id: 18\n  }, {\n    description: \"Name of Board and Components\",\n    id: 19\n  }, {\n    description: \"Name of Board and Components\",\n    id: 20\n  }, {\n    description: \"Name of Board and Components\",\n    id: \"asus\"\n  }];\n\n  const updateSearch = event => {\n    setSearch(event.target.value.toLowerCase());\n  };\n\n  let selectedInventory = inventory.map(item => {\n    if (currentSearch.includes(item.id)) {\n      return /*#__PURE__*/_jsxDEV(InventoryItem, {\n        description: item.description,\n        id: item.id\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    } else {\n      return null;\n    }\n  });\n  let totalInventory = inventory.map(item => {\n    return /*#__PURE__*/_jsxDEV(InventoryItem, {\n      description: item.description,\n      id: item.id\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  });\n\n  let itemSelector = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"itemSelector\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.itemTab(0);\n      },\n      className: props.tabs[0].classes,\n      children: \"All Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.itemTab(1);\n      },\n      className: props.tabs[1].classes,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.itemTab(2);\n      },\n      className: props.tabs[2].classes,\n      children: \"Item\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      onClick: () => {\n        props.logOut(true);\n      },\n      className: \"itemTab\",\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n\n  let itemArea = null;\n\n  if (props.tabs[0].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, totalInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  } else if (props.tabs[1].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: [itemSelector, /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateSearch,\n        className: \"searchBar\",\n        type: \"text\",\n        value: currentSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), selectedInventory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  } else if (props.tabs[2].classes.includes(\"selectedItem\")) {\n    itemArea = /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"itemArea\",\n      children: itemSelector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerTitle\",\n        children: \"Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"headerProfile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), itemArea]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoggedIn, \"Yqsg7uAZTMtIBpSV5ktw7PRQVtA=\");\n\n_c = LoggedIn;\nexport default LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/LoggedIn.js"],"names":["React","useState","Fragment","InventoryItem","LoggedIn","props","currentSearch","setSearch","inventory","description","id","updateSearch","event","target","value","toLowerCase","selectedInventory","map","item","includes","totalInventory","itemSelector","itemTab","tabs","classes","logOut","itemArea"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from 'react';\r\nimport './LoggedIn.css';\r\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\r\n\r\n\r\n\r\nconst LoggedIn = (props) =>{\r\n    const [currentSearch, setSearch] = useState(\"\");\r\n    \r\n    let inventory=[\r\n        {description:\"Name of Board and Components\" , id:1},\r\n        {description:\"Name of Board and Components\" , id:2},\r\n        {description:\"Name of Board and Components\" , id:3},\r\n        {description:\"Name of Board and Components\" , id:4},\r\n        {description:\"Name of Board and Components\" , id:13},\r\n        {description:\"Name of Board and Components\" , id:14},\r\n        {description:\"Name of Board and Components\" , id:15},\r\n        {description:\"Name of Board and Components\" , id:16},\r\n        {description:\"Name of Board and Components\" , id:17},\r\n        {description:\"Name of Board and Components\" , id:18},\r\n        {description:\"Name of Board and Components\" , id:19},\r\n        {description:\"Name of Board and Components\" , id:20},\r\n        {description:\"Name of Board and Components\" , id:\"asus\"}\r\n    ];\r\n    \r\n    \r\n    const updateSearch = (event) =>{\r\n        setSearch(event.target.value.toLowerCase());   \r\n    } \r\n\r\n    \r\n    let selectedInventory = inventory.map(item =>{\r\n        if(currentSearch.includes(item.id))\r\n        {\r\n            return <InventoryItem description={item.description} id={item.id} key={item.id}/>;\r\n        }\r\n        else    \r\n        {\r\n            return null;\r\n        }\r\n    });\r\n    \r\n\r\n    let totalInventory = inventory.map(item =>{\r\n        return <InventoryItem description={item.description} id={item.id} key={item.id}/>\r\n    });\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    let itemSelector=(\r\n        <ul className='itemSelector'>\r\n        <ul onClick={() => {props.itemTab(0)}} className={props.tabs[0].classes}>All Inventory</ul>\r\n        <ul onClick={() => {props.itemTab(1)}} className={props.tabs[1].classes}>Search</ul>\r\n        <ul onClick={() => {props.itemTab(2)}} className={props.tabs[2].classes}>Item</ul>\r\n        <ul onClick={() =>{props.logOut(true)}} className='itemTab'>Logout</ul>\r\n    </ul>\r\n    );\r\n    \r\n    let itemArea = null;\r\n    if(props.tabs[0].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                 {itemSelector}\r\n                {totalInventory}    \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(props.tabs[1].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                <input onChange={updateSearch} className='searchBar' type=\"text\" value={currentSearch}></input>\r\n                {selectedInventory}\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(props.tabs[2].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <ul className=\"header\">\r\n                <li className=\"headerTitle\" >Inventory</li>\r\n                <li className=\"headerProfile\" >Profile</li>\r\n            </ul>\r\n\r\n            {itemArea}\r\n    \r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}