{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iliyan\\\\Desktop\\\\project\\\\src\\\\Containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport authContext from '../Context/authContext';\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\nimport './App.css';\nconst debug = true;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      credentials: [username = \"\", password = \"\"],\n      tabs: [{\n        name: \"All Inventory\",\n        classes: \"itemTab selectedItem\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }],\n      authenticated: false,\n      currentSearch: ''\n    };\n\n    this.updateSelected = index => {\n      let tabs = [{\n        name: \"All Inventory\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Search\",\n        classes: \"itemTab\"\n      }, {\n        name: \"Item\",\n        classes: \"itemTab\"\n      }];\n      let selectedTab = { ...tabs[index]\n      };\n      selectedTab.classes += \" selectedItem\";\n      tabs[index] = selectedTab;\n      this.setState({\n        tabs: tabs\n      });\n    };\n\n    this.updateSearch = event => {\n      this.setState({\n        currentSearch: event.target.value\n      });\n    };\n  }\n\n  updateCred(event, credSelector) {\n    index = credSelector === 'username' ? 0 : 1;\n    this.setState(cred[index] = event.target.value);\n  }\n\n  render() {\n    let item = null;\n    if (this.state.authenticated) item = /*#__PURE__*/_jsxDEV(LoggedIn, {\n      logOut: this.checkCred,\n      itemTab: this.updateSelected,\n      tabs: this.state.tabs,\n      updateSearch: this.updateSearch,\n      searchBar: this.state.currentSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this);else item = /*#__PURE__*/_jsxDEV(\"authContext\", {\n      value: {\n        authenticated: this.state.authenticated,\n        updateCred: this.updateCred,\n        submit: this.submit\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Iliyan/Desktop/project/src/Containers/App.js"],"names":["React","Component","authContext","LoginBox","LoggedIn","debug","App","state","credentials","username","password","tabs","name","classes","authenticated","currentSearch","updateSelected","index","selectedTab","setState","updateSearch","event","target","value","updateCred","credSelector","cred","render","item","checkCred","submit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport authContext from '../Context/authContext';\n\nimport LoginBox from '../Components/LoginBox';\nimport LoggedIn from './LoggedIn';\n\nimport './App.css'\nconst debug = true;\n\nclass App extends Component {\n  state = {\n    credentials:[username= \"\", password= \"\"],\n      tabs: [\n        {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\n        {name: \"Search\", classes: \"itemTab\"},\n        {name: \"Item\", classes: \"itemTab\"}\n      ],\n      authenticated: false,\n      currentSearch:''\n  }\n\n  updateCred(event,credSelector)\n  {\n    index = (credSelector === 'username') ? 0 : 1;\n    this.setState(cred[index] = event.target.value);\n  }\n\n  updateSelected = (index) =>{\n    let tabs = [\n      {name: \"All Inventory\", classes: \"itemTab\"},\n      {name: \"Search\", classes: \"itemTab\"},\n      {name: \"Item\", classes: \"itemTab\"}\n    ];\n\n    let selectedTab = {...tabs[index]};\n    selectedTab.classes += (\" selectedItem\");\n\n    \n    tabs[index] = selectedTab;\n\n    this.setState(\n      {tabs:tabs}\n    );\n\n  }\n\n  updateSearch = (event) =>{\n    this.setState(\n      {currentSearch: event.target.value}\n    );\n  }\n\n  \n\n  render(){\n\n    let item = null\n    if(this.state.authenticated)\n      item = (<LoggedIn\n      logOut = {this.checkCred}\n      itemTab = {this.updateSelected}\n      tabs = {this.state.tabs}\n      updateSearch = {this.updateSearch}\n      searchBar = {this.state.currentSearch}\n      />);\n    else\n      \n      item = (\n        <authContext \n        value={\n          {authenticated:this.state.authenticated,\n          updateCred:this.updateCred,\n          submit:this.submit\n        }}>\n          <LoginBox/> \n        </authContext>);\n\n    return(\n      <div>\n        {item}\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}