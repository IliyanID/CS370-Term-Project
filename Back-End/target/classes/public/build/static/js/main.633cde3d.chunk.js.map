{"version":3,"sources":["Context/authContext.js","Context/userContext.js","Components/LoginBox.js","resources/r1.jpg","Components/InventoryItem/InventoryItem.js","Containers/LoggedIn.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["authContext","React","createContext","authenticated","updateCred","authenticateUser","userContext","logout","itemTab","updateSearch","tabs","currentSearch","formSubmit","event","preventDefault","LoginBox","props","useContext","AuthContext","content","onSubmit","className","onChange","e","target","value","creds","type","placeholder","onClick","href","setCreateChecked","setUpdateChecked","getCreateUser","checked","pass","user","createUser","resetPasswordChecked","updateUser","InventoryItem","imageClass","desClass","src","logo","description","id","deleteInventory","LoggedIn","useState","inventory","displayed","url","username","count","setCount","stock","addItem","setAddItem","update","setUpdate","UserContext","useEffect","getInventory","Http","XMLHttpRequest","window","location","UserToken","userToken","open","send","onreadystatechange","temp","JSON","parse","response","console","log","result","i","undefined","push","removeInventory","fetch","method","then","json","selectedInventory","map","item","index","totalInventory","itemSelector","classes","itemArea","includes","join","data","stringify","success","alert","deleteUser","App","state","userCredentials","name","createUserChecked","setState","password","changeUser","document","URL","cred","credSelector","tempUserCredentials","updateSelectedTab","selectedTab","toLowerCase","split","createUserUpdate","this","Provider","getUpdatUser","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.633cde3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst authContext = React.createContext({\r\n    authenticated:false,\r\n    updateCred:() => {},\r\n    authenticateUser:() => {}\r\n});\r\n    \r\n\r\n\r\nexport default authContext;","import React from 'react';\r\n\r\nconst userContext = React.createContext({\r\n    logout:() => {},\r\n    itemTab: () => {},\r\n    updateSearch: () => {},\r\n    tabs: {},\r\n    currentSearch: [\"\"]\r\n});\r\n    \r\n\r\n\r\nexport default userContext;","import React, { useContext,Fragment } from 'react';\r\nimport AuthContext from '../Context/authContext';\r\n\r\nimport './LogInBox.css';\r\nconst formSubmit = (event) =>{\r\n  event.preventDefault();\r\n}\r\n\r\nconst LoginBox = (props) =>{\r\n    const authContext = useContext(AuthContext);\r\n   // console.log(authContext.getCreateUser.checked);\r\n    let content=(\r\n      <Fragment>\r\n      <form onSubmit={formSubmit}>\r\n            <div className=\"login-cred\">\r\n                <input  onChange={(e) =>{authContext.updateCred(e.target.value,\"username\")}} value={authContext.creds[0]} type=\"text\" placeholder=\"Username\"/>\r\n                <input  onChange={(e) =>{authContext.updateCred(e.target.value,\"password\")}}  value={authContext.creds[1]} type=\"password\" placeholder=\"Password\"/>\r\n            </div>\r\n            <div>\r\n                <input onClick={authContext.authenticateUser} type=\"submit\" className=\"login-button\" value=\"LogIn\"/>\r\n            </div>\r\n        </form>\r\n\r\n    \r\n        <div className = \"sign-up\">\r\n          <p>Don't Have an account? <a href=\"\" onClick={(e) =>{e.preventDefault(); authContext.setCreateChecked(true,\"\",\"\")}}>Sign Up</a></p>\r\n          <p>Forgot Password? <a href=\"\" onClick={(e) =>{e.preventDefault(); authContext.setUpdateChecked(true,\"\",\"\")}}>Reset Password</a></p>\r\n        </div>\r\n        </Fragment>\r\n    );\r\n    if (authContext.getCreateUser.checked === true){\r\n      content=(\r\n        <Fragment>\r\n        <form onSubmit={formSubmit}>\r\n              <div className=\"login-cred\">\r\n                  <input  onChange={(e) =>{authContext.setCreateChecked(true,e.target.value,authContext.getCreateUser.pass)}} type=\"text\" value={authContext.getCreateUser.user} placeholder=\"Username\"/>\r\n                  <input  onChange={(e) =>{authContext.setCreateChecked(true,authContext.getCreateUser.user,e.target.value)}} type=\"password\" value={authContext.getCreateUser.pass} placeholder=\"New Password\"/>\r\n              </div>\r\n              <div>\r\n                  <input onClick={authContext.createUser} type=\"submit\" className=\"login-button\" value=\"Sign Up\"/>\r\n              </div>\r\n          </form>\r\n  \r\n      \r\n          <div className = \"sign-up\">\r\n            <p>Want to login? <a href=\"\"  onClick={(e) =>{e.preventDefault(); authContext.setCreateChecked(false,\"\",\"\"); authContext.setUpdateChecked(false,\"\",\"\")}}>Login</a></p>\r\n            <p>Forgot Password? <a href=\"\" onClick={(e) =>{e.preventDefault(); authContext.setCreateChecked(false,\"\",\"\"); authContext.setUpdateChecked(true,\"\",\"\")}}>Reset Password</a></p>\r\n          </div>\r\n          </Fragment>);\r\n    }\r\n\r\n    if (authContext.resetPasswordChecked.checked === true){\r\n      content=(\r\n        <Fragment>\r\n        <form onSubmit={formSubmit}>\r\n              <div className=\"login-cred\">\r\n                  <input  onChange={(e) =>{authContext.setUpdateChecked(true,e.target.value,authContext.resetPasswordChecked.pass)}} type=\"text\" value={authContext.resetPasswordChecked.user} placeholder=\"Username\"/>\r\n                  <input  onChange={(e) =>{authContext.setUpdateChecked(true,authContext.resetPasswordChecked.user,e.target.value)}} type=\"password\" value={authContext.resetPasswordChecked.pass} placeholder=\"New Password\"/>\r\n              </div>\r\n              <div>\r\n                  <input onClick={authContext.updateUser} type=\"submit\" className=\"login-button\" value=\"Reset Password\"/>\r\n              </div>\r\n          </form>\r\n  \r\n      \r\n          <div className = \"sign-up\">\r\n            <p>Want to login? <a href=\"\"  onClick={(e) =>{e.preventDefault(); authContext.setCreateChecked(false,\"\",\"\"); authContext.setUpdateChecked(false,\"\",\"\")}}>Login</a></p>\r\n            <p>Don't Have an account? <a href=\"\" onClick={(e) =>{e.preventDefault(); authContext.setCreateChecked(true,\"\",\"\"); authContext.setUpdateChecked(false,\"\",\"\")}}>Sign Up</a></p>\r\n          </div>\r\n          </Fragment>);\r\n    }\r\n\r\n    return(\r\n      <div className=\"login-box\">\r\n        <h1>Inventory</h1>\r\n\r\n        {content}\r\n\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default LoginBox;","export default __webpack_public_path__ + \"static/media/r1.cf7900e0.jpg\";","import React from 'react'\r\nimport logo from '../../resources/r1.jpg';\r\nimport './InventoryItem.css';\r\n\r\n\r\nconst InventoryItem = (props) =>{\r\n    let imageClass = \"image\";\r\n    let desClass = \"itemDes\";\r\n    if (props.type === \"addItem\"){\r\n        imageClass = \"addItemImage\";\r\n        desClass = \"addItemDes\";\r\n    }\r\n    return(\r\n        <li className=\"item\">\r\n            <img className={imageClass} src={logo}/>\r\n    <div className={desClass}>{props.description} ID:{props.id}{(imageClass === \"image\")?<button onClick={() =>{props.deleteInventory(props.id)}} className=\"button\">Remove</button>:null}</div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default InventoryItem;","import React, {Fragment, useContext, useEffect, useState} from 'react';\r\nimport UserContext from '../Context/userContext';\r\n\r\nimport './LoggedIn.css';\r\nimport InventoryItem from '../Components/InventoryItem/InventoryItem';\r\n\r\n\r\n\r\n\r\n\r\nconst LoggedIn = (props) =>{\r\n    let debug = false;\r\n\r\n\r\n    const [count, setCount] = useState([{inventory:{description:\"\",id:\"\",displayed:\"false\",url:\"\",username:\"\"}}]);\r\n    const [addItem, setAddItem] = useState({id:\"ID\",description:\"Description\",stock:\"Stock\"});\r\n    const [update, setUpdate] = useState(false);\r\n    const userContext = useContext(UserContext)\r\n    let mounted = false;\r\n    useEffect(() => {\r\n        mounted = true;\r\n        getInventory();\r\n        \r\n        return () => mounted = false;\r\n      },[]);\r\n        \r\n      useEffect(() => {\r\n        mounted = true;\r\n        getInventory();\r\n        \r\n        return () => mounted = false;\r\n      },[update]);\r\n\r\n  \r\n\r\n      const getInventory = () =>{\r\n    \r\n\r\n        const Http = new XMLHttpRequest();\r\n\r\n        let url;\r\n        if(debug === true)\r\n            url = \"http://10.0.0.108:80/inventory/\" + userContext.UserToken.userToken;\r\n        else\r\n            url = window.location.href + \"inventory/\" + userContext.UserToken.userToken;\r\n\r\n        //console.log(url);\r\n        Http.open(\"GET\",url);\r\n        Http.send();\r\n        \r\n        Http.onreadystatechange = (e) => {\r\n         \r\n          let temp = JSON.parse(Http.response);\r\n          console.log(temp);\r\n          let result = [];\r\n          for(let i = 0; temp[i] !== undefined; i++){\r\n              result.push(temp[i]);\r\n          }\r\n         setCount(result)\r\n        // console.log(count);\r\n        }\r\n    }\r\n\r\n    const addInventory = () =>{\r\n        const Http = new XMLHttpRequest();\r\n        let url;\r\n        if(debug === true)\r\n            url = \"http://10.0.0.108:80/inventory/\"   + userContext.UserToken.userToken;\r\n        else\r\n            url = window.location.href + \"inventory/\" + userContext.UserToken.userToken;\r\n\r\n\r\n        Http.open(\"POST\",url);\r\n        let data = {id:addItem.id, description:addItem.description, displayed:false, url:\"http\"};\r\n\r\n        Http.send(JSON.stringify(data));\r\n        \r\n        Http.onreadystatechange = (e) => {\r\n            let result = JSON.parse(Http.response);\r\n            console.log(result);\r\n            if(result.success === true)\r\n             setUpdate(!update);\r\n            else\r\n                alert(\"Inventory not added\");\r\n        }\r\n    }\r\n\r\n    const removeInventory = (id) =>{\r\n        let url;\r\n        if(debug === true)\r\n            url = \"http://10.0.0.108:80/inventory/\" + userContext.UserToken.userToken;\r\n        else\r\n            url = window.location.href  + \"inventory/\" + userContext.UserToken.userToken + \"/\" + id;\r\n\r\n        return fetch(url, {\r\n            method: 'delete'\r\n          }).then(response =>\r\n            response.json().then(json => {\r\n                setUpdate(!update);\r\n               \r\n              return json;\r\n            })\r\n          );\r\n    }\r\n\r\n\r\n    const inventory = count;\r\n    \r\n\r\n   \r\n\r\n    let selectedInventory = inventory.map(item =>{\r\n        return userContext.currentSearch.map(\r\n            index =>{\r\n                \r\n                if(index == item.id && item.displayed == false)\r\n                {\r\n                    //console.log(item.id);\r\n                    item.displayed = true;\r\n                    return <InventoryItem description={item.description} id={item.id} key={item.id}/>;\r\n                }\r\n                else    \r\n                    return null;\r\n            }\r\n        )\r\n    });\r\n    //console.log(selectedInventory);\r\n\r\n    let totalInventory = inventory.map(item =>{\r\n        return <InventoryItem description={item.description} id={item.id} key={item.id} deleteInventory={removeInventory}/>\r\n    });\r\n\r\n    let itemSelector=(\r\n        <ul className='itemSelector'>\r\n        <ul onClick={() => {userContext.itemTab(0)}} className={userContext.tabs[0].classes}>All Inventory</ul>\r\n        <ul onClick={() => {userContext.itemTab(1)}} className={userContext.tabs[1].classes}>Search</ul>\r\n        <ul onClick={() => {userContext.itemTab(2)}} className={userContext.tabs[2].classes}>Add Item</ul>\r\n        <ul onClick={() =>{userContext.logout(true)}} className='itemTab'>Logout</ul>\r\n    </ul>\r\n    );\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let itemArea = null;\r\n    if(userContext.tabs[0].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                {totalInventory}    \r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[1].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}\r\n                <input onChange={userContext.updateSearch} className='searchBar' type=\"text\" value={userContext.currentSearch.join(' ')}></input>\r\n                {selectedInventory}\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    else if(userContext.tabs[2].classes.includes(\"selectedItem\"))\r\n    {\r\n        itemArea = (\r\n            <ul className='itemArea'>\r\n                {itemSelector}   \r\n                    <input onChange={(e)=>setAddItem({stock:addItem.stock,description:addItem.description,id:e.target.value})} className =\"searchBar\"  placeholder={addItem.id}/>     \r\n                    <input onChange={(e)=>setAddItem({stock:addItem.stock,description:e.target.value,id:addItem.id})} className =\"searchBar\" placeholder={addItem.description}/>   \r\n                    <input onChange={(e)=>setAddItem({stock:e.target.value.stock,description:addItem.description,id:e.target.value})} className =\"searchBar\" placeholder={addItem.stock}/>  \r\n                    <button onClick={addInventory}className=\"button\"type=\"button\">Submit</button>\r\n                <InventoryItem type=\"addItem\" description={addItem.description} id={addItem.id}/>\r\n            </ul>\r\n        ); \r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n            <ul className=\"header\">\r\n                <li className=\"headerTitle\" >Inventory</li>\r\n                <li className=\"headerProfile\" onClick={userContext.deleteUser}>Delete Account</li>\r\n            </ul>\r\n            {itemArea}   \r\n        </Fragment>\r\n    );\r\n  \r\n}\r\n\r\nexport default LoggedIn;","import React, { PureComponent, Fragment } from 'react';\r\nimport AuthContext from '../Context/authContext';\r\nimport UserContext from '../Context/userContext'\r\n\r\nimport LoginBox from '../Components/LoginBox';\r\nimport LoggedIn from './LoggedIn';\r\n\r\nimport './App.css'\r\nconst debug = false;\r\n\r\nclass App extends PureComponent{\r\n\r\n  state = {\r\n    userCredentials:[\"\",\"\"],\r\n    tabs: [\r\n      {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ],\r\n    UserToken:{authenticated:false,userToken:\"\"},\r\n    currentSearch:[\"\"],\r\n    inventory:[{}],\r\n    createUserChecked:{checked: false,user:\"\",pass:\"\"},\r\n    resetPasswordChecked:{checked: false,user:\"\",pass:\"\"},\r\n    user:\"\"\r\n  }\r\n\r\n \r\n\r\n  deleteUser = () =>{\r\n    const Http = new XMLHttpRequest();\r\n    let url;\r\n    if(debug === true)\r\n        url = \"http://10.0.0.108:80/username/\"+ this.state.UserToken.userToken;\r\n    else\r\n        url = window.location.href + \"username/\" + this.state.UserToken.userToken;\r\n\r\n\r\n    Http.open(\"DELETE\",url);\r\n   \r\n  \r\n    Http.send();\r\n    \r\n    Http.onreadystatechange = (e) => {\r\n        let result = JSON.parse(Http.response)\r\n        console.log(result)\r\n        if(result.success === true){\r\n          //alert(result.UserDeleted + \" Deleted\");\r\n          this.setState({UserToken:{authenticated:false,userToken:\"\"}});\r\n        }\r\n        else\r\n          alert(\"User Was Not Deleted\");\r\n        \r\n    }\r\n  }\r\n  createUser = () =>{\r\n    const Http = new XMLHttpRequest();\r\n    let url;\r\n    if(debug === true)\r\n        url = \"http://10.0.0.108:80/username\"\r\n    else\r\n        url = window.location.href + \"username\"\r\n\r\n\r\n    Http.open(\"POST\",url);\r\n    let data = {username:this.state.createUserChecked.user,password:this.state.createUserChecked.pass};\r\n   // console.log(JSON.stringify(data));\r\n    Http.send(JSON.stringify(data));\r\n    \r\n    Http.onreadystatechange = (e) => {\r\n        let result = JSON.parse(Http.response)\r\n        console.log(result)\r\n        if(result.success === true){\r\n          //alert(\"User Created\");\r\n          this.setState({createUserChecked:{checked:false,user:\"\",pass:\"\"}});\r\n        }\r\n        else\r\n          alert(\"User Was Not Created\");\r\n        \r\n    }\r\n  }\r\n\r\n  changeUser = () =>{\r\n    const Http = new XMLHttpRequest();\r\n    let url;\r\n    if(debug === true)\r\n        url = \"http://10.0.0.108:80/username\" \r\n    else\r\n        url = window.location.href + \"username\" \r\n    //console.log(this.state.user);\r\n\r\n    Http.open(\"PUT\",url);\r\n    let data = {username:this.state.resetPasswordChecked.user,password:this.state.resetPasswordChecked.pass};\r\n   console.log(\"Change User JSON\\n\" + JSON.stringify(data));\r\n    Http.send(JSON.stringify(data));\r\n    \r\n    Http.onreadystatechange = (e) => {\r\n      let result = JSON.parse(Http.response);\r\n      console.log(result);\r\n      if(result.success === true){\r\n        //alert(\"User Password Changed\");\r\n        this.setState({resetPasswordChecked:{checked:false,user:\"\",pass:\"\"}});\r\n    }\r\n    else\r\n      alert(\"User Password Not Changed\");\r\n  }\r\n}\r\n\r\n  authenticateUser = (logout) =>{\r\n    let url = document.URL + \"user\";\r\n    if(debug){\r\n      url = \"http://10.0.0.108:80/user\"\r\n      console.log(\"Entered authenticateUser\");\r\n    }\r\n   // console.log(url);\r\n\r\n      const Http = new XMLHttpRequest();\r\n      Http.open(\"POST\", url);\r\n      //Http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n      //console.log(Http.request)\r\n      let cred = {username:this.state.userCredentials[0],password:this.state.userCredentials[1]};\r\n      \r\n      \r\n      Http.onreadystatechange = (e) => {\r\n        let result = JSON.parse(Http.response);\r\n        console.log(result);\r\n        if(result.authenticated === true || logout === true || debug === true){\r\n          this.setState({UserToken:JSON.parse(Http.response),\r\n          userCredentials:[\"\",\"\"],\r\n          tabs: [\r\n            {name: \"All Inventory\", classes: \"itemTab selectedItem\"},\r\n            {name: \"Search\", classes: \"itemTab\"},\r\n            {name: \"Item\", classes: \"itemTab\"}\r\n            ],\r\n            currentSearch:[\"\"]});\r\n       // console.log(JSON.parse(Http.response));\r\n        }\r\n      }\r\n    Http.send(JSON.stringify(cred));\r\n    \r\n\r\n  }\r\n\r\n\r\n  \r\n \r\n\r\n  updateCred = (value,credSelector) =>{\r\n      const index = (credSelector === \"username\") ? 0 : 1;\r\n      var tempUserCredentials = [this.state.userCredentials[0],this.state.userCredentials[1]];\r\n      tempUserCredentials[index] = value;\r\n      this.setState({userCredentials:tempUserCredentials});\r\n\r\n      if(debug)\r\n        console.log(\"CredSelector: \" + credSelector + \" Value: \" + value);   \r\n  \r\n\r\n    \r\n  }\r\n\r\n  updateSelectedTab = (index) =>{\r\n    let tabs = [\r\n      {name: \"All Inventory\", classes: \"itemTab\"},\r\n      {name: \"Search\", classes: \"itemTab\"},\r\n      {name: \"Item\", classes: \"itemTab\"}\r\n    ];\r\n    let selectedTab = {...tabs[index]};\r\n    selectedTab.classes += (\" selectedItem\");\r\n    \r\n    tabs[index] = selectedTab;\r\n\r\n    this.setState({tabs:tabs});\r\n  }\r\n\r\n  updateSearch = (event) =>{\r\n    this.setState({currentSearch:event.target.value.toLowerCase().split(\" \")});\r\n    if(debug)\r\n      console.log(\"Current Search: \" + this.state.currentSearch);\r\n  }\r\n\r\n  createUserUpdate = (checked,user,pass) =>{\r\n    this.setState({resetPasswordChecked:{checked:checked,user:user ,pass:pass}}); \r\n    this.setState({user:user});\r\n  }\r\n\r\n  render(){\r\n  \r\n    let item = null\r\n    if(this.state.UserToken.authenticated)\r\n      item = (\r\n        <UserContext.Provider value = {\r\n          {logout : this.authenticateUser,\r\n          itemTab : this.updateSelectedTab,\r\n          updateSearch : this.updateSearch,\r\n          tabs : this.state.tabs,\r\n          currentSearch : this.state.currentSearch,\r\n          UserToken: this.state.UserToken,\r\n          inventory:this.state.inventory,\r\n          deleteUser:this.deleteUser}}>\r\n              \r\n            <LoggedIn/>\r\n\r\n        </UserContext.Provider>);\r\n    \r\n    else     \r\n      item = (\r\n        <AuthContext.Provider value = {\r\n          {authenticated : this.state.UserToken.authenticated,\r\n          creds:this.state.userCredentials,\r\n          updateCred : this.updateCred,\r\n          authenticateUser : this.authenticateUser,\r\n          createUserChecked: this.state.createUserChecked,\r\n          resetPasswordChecked: this.state.resetPasswordChecked,\r\n          updateUser : this.changeUser,\r\n          setUpdateChecked:this.createUserUpdate,\r\n          getUpdatUser:this.state.resetPasswordChecked,\r\n          createUser: this.createUser,\r\n          getCreateUser:this.state.createUserChecked,\r\n          setCreateChecked:(checked, user, pass) =>{ this.setState({createUserChecked:{checked:checked,user:user,pass:pass}});}\r\n          }}>\r\n            \r\n            <LoginBox/> \r\n\r\n        </AuthContext.Provider>);\r\n\r\n    return(\r\n      <Fragment>\r\n        {item}\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './Containers/App';\r\n\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}